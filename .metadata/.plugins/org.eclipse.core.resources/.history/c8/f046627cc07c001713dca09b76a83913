package com.globalexpress.web.cms.service.StatementNotice;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import com.globalexpress.web.cms.dao.StatementNoticeDao;
import com.globalexpress.web.entity.StatementNotice;
import com.globalexpress.web.entity.UserInfo;
@Service("statementService")
public class StatementNoticeServiceImpl implements StatementNoticeService {
	@Resource
	private StatementNoticeDao dao;//分页查询
	public List<StatementNotice> findStatementNoticeByPage(int start, int rows,Long ownerId) {
		List<StatementNotice> d1=dao.findStatementNoticeByPage(start, rows,ownerId);
		return d1;
	}
	//查询总条数
	public String findStatementNoticeCount(Long ownerId) {
		String c1=dao.findStatementNoticeCount(ownerId);
		return c1;
	}
	//通过id查询对象
	public StatementNotice findByStatementNoticeId(Long id,Long ownerId) {
		StatementNotice sn=dao.findByStatementNoticeId(id,ownerId);
		return sn;
	}
	//修改内容
	public int modifyStatementNotice(Long id,Long ownerId,String statementTitle, String statement, String notice,String note,Long operatorId,Timestamp gmtModified) {
		StatementNotice sn=dao.findByStatementNoticeId(id, ownerId);
		sn.setStatementTitle(statementTitle);
		sn.setStatement(statement);
		sn.setNotice(notice);
		sn.setNote(note);
		sn.setOperatorId(operatorId);
		sn.setGmtModified(gmtModified);
		int n = dao.modifyStatementNotice(sn);
		return n;
	}
	//添加内容
	public int addStatementNotice(Long ownerId, Timestamp gmtCreate, String statementTitle, String statement,
			String notice,String note,Long operatorId) {
		StatementNotice sn=new StatementNotice();
		sn.setOwnerId(ownerId);
		sn.setGmtCreate(gmtCreate);
		sn.setStatementTitle(statementTitle);
		sn.setStatement(statement);
		sn.setNotice(notice);
		sn.setNote(note);
		sn.setOperatorId(operatorId);
		int n=dao.addStatementNotice(sn);
		return n;
	}
	//删除单条
	public void delStatementNotice(Long id,Long ownerId) {
		dao.delStatementNotice(id, ownerId);
	}
	//模糊查询
	public List<StatementNotice> findListByStatementNotice(String keyword,Long ownerId) {
		List<StatementNotice> list=dao.findListByStatementNotice(keyword, ownerId);
		return list;
	}
	//批量删除
	public void delStatementNoticeList(Long[] id, Long ownerId) {
		for(int i=0;i<id.length;i++){
			dao.delStatementNotice(id[i], ownerId);
			}
	}
	//启用
	public int updateStatementNotice(Long id, Long ownerId, Long operatorId, Timestamp gmtModified, Boolean apply) {
		StatementNotice sn=dao.findByStatementNoticeId(id, ownerId);
		sn.setOperatorId(operatorId);
		sn.setGmtModified(gmtModified);
		sn.setApply(apply);
		int n = dao.modifyStatementNotice1(sn);
		return n;
	}
	//其他不启用
	/*public List<StatementNotice> findListByReserved1(Long id,Long ownerId) {
		List<StatementNotice> list = dao.findListByReserved1(id,ownerId);
		return list;
	}*/
	public void updateStatementNotice1(Long id,Long ownerId, Long operatorId, Timestamp gmtModified, Boolean apply) {
		List<StatementNotice> list = dao.findListByApply(id,ownerId);
//		System.out.println(list);
		for (int i = 0; i < list.size(); i++) {
			StatementNotice s=list.get(i);
			s.setOperatorId(operatorId);
			s.setGmtModified(gmtModified);
			s.setApply(apply);
			dao.modifyStatementNotice1(s);
		}
	}
	public UserInfo findByOperatorId(Long operatorId, Long ownerId) {
		UserInfo ui=dao.findByOperatorId(operatorId, ownerId);
		return ui;
	}
}
